{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-mask\";\n/**\n * This component provides an input field with a specified mask pattern and shape.\n */\nexport class InputMaskComponent {\n  constructor() {\n    this.styleObject = {\n      'color': 'blue',\n      'font-size': '16px'\n    };\n    /**\n    * A custom pattern object based on the provided `maskPattern`.\n    */\n    this.customPatterns = {\n      '0': {\n        pattern: new RegExp(this.maskPattern)\n      }\n    };\n  }\n  static #_ = this.ɵfac = function InputMaskComponent_Factory(t) {\n    return new (t || InputMaskComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: InputMaskComponent,\n    selectors: [[\"input-mask\"]],\n    inputs: {\n      maskPattern: \"maskPattern\",\n      maskShape: \"maskShape\",\n      styleObject: \"styleObject\"\n    },\n    decls: 1,\n    vars: 2,\n    consts: [[\"type\", \"text\", 3, \"patterns\", \"mask\"]],\n    template: function InputMaskComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"input\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"patterns\", ctx.customPatterns)(\"mask\", ctx.maskShape);\n      }\n    },\n    dependencies: [i1.NgxMaskDirective],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["InputMaskComponent","constructor","styleObject","customPatterns","pattern","RegExp","maskPattern","_","_2","selectors","inputs","maskShape","decls","vars","consts","template","InputMaskComponent_Template","rf","ctx","i0","ɵɵelement","ɵɵproperty"],"sources":["C:\\Users\\user\\Desktop\\masked-input\\src\\app\\input-mask\\input-mask.component.ts","C:\\Users\\user\\Desktop\\masked-input\\src\\app\\input-mask\\input-mask.component.html"],"sourcesContent":["import { Component, Input } from '@angular/core';\n/**\n * This component provides an input field with a specified mask pattern and shape.\n */\n@Component({\n  selector: 'input-mask',\n  templateUrl: './input-mask.component.html'\n})\nexport class InputMaskComponent {\n   /**\n   * The mask pattern for input validation.\n   */\n  @Input() maskPattern!: string; \n\n  /**\n   * The shape of the input field (e.g., '(000-000)' or '000' 0 is the repacement of the char or number).\n   */\n  @Input() maskShape!: string;\n\n  @Input() styleObject:{ [key: string]: string } = {\n    'color': 'blue',\n    'font-size': '16px',\n  };\n\n   /**\n   * A custom pattern object based on the provided `maskPattern`.\n   */\n  customPatterns = { '0': { pattern: new RegExp(this.maskPattern)} };\n}\n","<input type=\"text\" [patterns]=\"customPatterns\" [mask]=\"maskShape\"/>\n\n"],"mappings":";;AACA;;;AAOA,OAAM,MAAOA,kBAAkB;EAJ/BC,YAAA;IAeW,KAAAC,WAAW,GAA6B;MAC/C,OAAO,EAAE,MAAM;MACf,WAAW,EAAE;KACd;IAEA;;;IAGD,KAAAC,cAAc,GAAG;MAAE,GAAG,EAAE;QAAEC,OAAO,EAAE,IAAIC,MAAM,CAAC,IAAI,CAACC,WAAW;MAAC;IAAC,CAAE;;EACnE,QAAAC,CAAA,G;qBApBYP,kBAAkB;EAAA;EAAA,QAAAQ,EAAA,G;UAAlBR,kBAAkB;IAAAS,SAAA;IAAAC,MAAA;MAAAJ,WAAA;MAAAK,SAAA;MAAAT,WAAA;IAAA;IAAAU,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR/BE,EAAA,CAAAC,SAAA,eAAmE;;;QAAhDD,EAAA,CAAAE,UAAA,aAAAH,GAAA,CAAAf,cAAA,CAA2B,SAAAe,GAAA,CAAAP,SAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}