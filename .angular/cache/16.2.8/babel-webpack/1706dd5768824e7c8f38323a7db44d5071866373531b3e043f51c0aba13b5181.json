{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class MaskPipe {\n  transform(input, pattern) {\n    if (!input || !pattern) {\n      return input;\n    }\n    // Remove any characters that don't match the pattern\n    const regex = new RegExp(pattern, 'g');\n    const filteredInput = input.replace(regex, '');\n    return filteredInput;\n  }\n  static #_ = this.ɵfac = function MaskPipe_Factory(t) {\n    return new (t || MaskPipe)();\n  };\n  static #_2 = this.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"mask\",\n    type: MaskPipe,\n    pure: true\n  });\n}","map":{"version":3,"names":["MaskPipe","transform","input","pattern","regex","RegExp","filteredInput","replace","_","_2","pure"],"sources":["C:\\Users\\user\\Desktop\\masked-input\\src\\app\\mask.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'mask'\n})\nexport class MaskPipe implements PipeTransform {\n  transform(input: string, pattern: string): string {\n    if (!input || !pattern) {\n      return input;\n    }\n\n    // Remove any characters that don't match the pattern\n    const regex = new RegExp(pattern, 'g');\n    const filteredInput = input.replace(regex, '');\n\n    return filteredInput;\n  }\n}\n"],"mappings":";AAKA,OAAM,MAAOA,QAAQ;EACnBC,SAASA,CAACC,KAAa,EAAEC,OAAe;IACtC,IAAI,CAACD,KAAK,IAAI,CAACC,OAAO,EAAE;MACtB,OAAOD,KAAK;;IAGd;IACA,MAAME,KAAK,GAAG,IAAIC,MAAM,CAACF,OAAO,EAAE,GAAG,CAAC;IACtC,MAAMG,aAAa,GAAGJ,KAAK,CAACK,OAAO,CAACH,KAAK,EAAE,EAAE,CAAC;IAE9C,OAAOE,aAAa;EACtB;EAAC,QAAAE,CAAA,G;qBAXUR,QAAQ;EAAA;EAAA,QAAAS,EAAA,G;;UAART,QAAQ;IAAAU,IAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}